name: Update AI Builders Landing Page

on:
  # Run every 30 minutes to check for new discussions
  schedule:
    - cron: '*/30 * * * *'
  
  # Allow manual triggering
  workflow_dispatch:
  
  # Run when discussions data file is updated
  push:
    paths:
      - 'aibuilders-discussions-results.json'
      - 'index.html'

jobs:
  update-discussions:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
      id-token: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Setup GitHub CLI
      run: |
        # GitHub CLI is pre-installed on GitHub runners
        gh --version

    - name: Configure Git
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'

    - name: Clone wiki repository
      run: |
        git clone https://github.com/AI-Product-Development/wiki.git temp_wiki
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Check for new discussions to create
      id: check_discussions
      run: |
        cd temp_wiki/challenges
        # Count markdown files
        MD_COUNT=$(find . -name "*.md" -type f | wc -l)
        echo "Found $MD_COUNT markdown files in wiki"
        
        cd ../../
        # Count existing discussions in our JSON
        if [ -f "aibuilders-discussions-results.json" ]; then
          JSON_COUNT=$(node -e "console.log(JSON.parse(require('fs').readFileSync('aibuilders-discussions-results.json', 'utf8')).length)")
        else
          JSON_COUNT=0
        fi
        echo "Found $JSON_COUNT existing discussions in JSON"
        
        if [ "$MD_COUNT" -gt "$JSON_COUNT" ]; then
          echo "new_discussions=true" >> $GITHUB_OUTPUT
          echo "New discussions found: $MD_COUNT markdown files vs $JSON_COUNT existing discussions"
        else
          echo "new_discussions=false" >> $GITHUB_OUTPUT
          echo "No new discussions to create"
        fi

    - name: Run discussion creation script
      if: steps.check_discussions.outputs.new_discussions == 'true'
      run: |
        node create-aibuilders-discussions.js
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Update timestamp in HTML
      run: |
        # Add a comment with timestamp to force cache refresh
        TIMESTAMP=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
        sed -i "s|<!-- Last updated: .* -->|<!-- Last updated: $TIMESTAMP -->|" index.html || \
        sed -i "/<\/head>/i\\    <!-- Last updated: $TIMESTAMP -->" index.html

    - name: Commit and push changes
      run: |
        git add .
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "ðŸ¤– Auto-update discussions data - $(date -u +"%Y-%m-%d %H:%M UTC")"
          git push
        fi

    - name: Trigger GitHub Pages rebuild
      if: steps.check_discussions.outputs.new_discussions == 'true' || github.event_name == 'push'
      run: |
        # GitHub Pages will automatically rebuild when we push changes
        echo "Changes pushed - GitHub Pages will rebuild automatically"